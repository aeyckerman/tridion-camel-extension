<?xml version="1.0" encoding="UTF-8"?>
<Configuration Version="7.0">
    <Global>
        <!--Optional:-->
        <ObjectCache Enabled="false">
            <!--Optional:-->
            <Policy Type="LRU" Class="com.tridion.cache.LRUPolicy">
				<!--
					The maximum size of memory used by the cache. The string must consist a number 
					followed by units: "k" or "kb" for kilobytes; "m" or "mb" for megabytes (case insensitive)
				-->
				<Param Name="MemSize" Value="16mb"/>
			</Policy>
			
            <!--Optional:-->
            <!-- The Features element specifies classes that add additional functionality to the cache. -->
			<Features>
				<Feature Type="DependencyTracker" Class="com.tridion.cache.DependencyTracker"/>
			</Features>
            <!--Optional:-->			
			<!--
					The optional RemoteSynchronization element specifies a remote Cache Channel Service.
					The remote Cache Channel Service is used to send messages between caches that are running
					on separate virtual machines. (For example, if the Broker and the Deployer run on separate
					virtual machines.)
					The Cache Channel Service must be running and listening on the configured host and port for
					remote synchronization to function.
					If this element is omitted, the cache does not use any inter-virtual machine cache communication.
					You must use the RemoteSynchronization element in conjunction with the Cache Channel service in
					order for objects to be updated or removed from the Broker's object cache when they are published
					or unpublished using the Deployer.
			-->
			<!-- RMI CacheChannel Connector example
			 
            <RemoteSynchronization Queuesize="128" ServiceMonitorInterval="10000" FlushCacheDuringDisconnectInterval="20000">
				<Connector Class="com.tridion.cache.RMICacheChannelConnector" Host="127.0.0.1" Port="1099" />
			</RemoteSynchronization>
			-->
			
			<!-- JMS CacheChannel Connector example
 
            <RemoteSynchronization Queuesize="128" ServiceMonitorInterval="10000" FlushCacheDuringDisconnectInterval="20000">
				<Connector Class="com.tridion.cache.JMSCacheChannelConnector" Topic="topicName" TopicConnectionFactory="jndiNameOfConnectionFactory"/>
			</RemoteSynchronization>
			-->
        </ObjectCache>
        <!--Optional:-->
		<!-- The optional MetaQueryConstants section allows setting of some advanced properties.
			   FindByURLCaseSensitivity overrides the default behaviour of the findByURL methods
			   for retrieving BinaryMeta and PageMeta data.
		<MetaQueryConstants>				
			<FindByURLCaseSensitivity Value="false"/>
			<CategoryQuerySeparator Value="/"/>
		</MetaQueryConstants>
              -->
		<!--
		Specify RMI listening port
		-->
		<!--
		<RMIChannel ListenerPort="1050"/>
		-->
        <Storages>
            <!--
            Optional
            Overriding default Tridion dao bundles.
            
            <StorageBindings>
                <Bundle src="undo_dao_bundle.xml"/>
                <Bundle src="ugc_dao_bundle.xml"/>
                <Bundle src="myDAO.xml"/>
                <Bundle src="mybindings.xml"/>
            </StorageBindings>
			-->

            <StorageBindings>
                <Bundle src="undo_dao_bundle.xml"/>
                <Bundle src="CDNDAOBundle.xml"/>
            </StorageBindings>
			<!-- 
				Optional:
				Wrappers enhances the behaviour of DAOs for specific use cases.
			
			<Wrappers>
			-->
			    <!--
			    Optional:
			    Wrapper definition for StorageLayer wrapping.
			    This element has the following attributes:
                    Name               The bean wrapper name.
			    -->
			    <!--
				<Wrapper Name="WrapperName">
				</Wrapper>
        
		        <Wrapper Name="UndoWrapper">
		          <Storage Type="persistence" Id="internalUndoDB" dialect="MSSQL" Class="com.tridion.storage.persistence.JPADAOFactory">
		            <Pool Type="jdbc" Size="5" MonitorInterval="60" IdleTimeout="120" CheckoutTimeout="120"/>
		            <DataSource Class="com.microsoft.sqlserver.jdbc.SQLServerDataSource">
		              <Property Name="serverName" Value="SERVER_NAME"/>
		              <Property Name="portNumber" Value="1433"/>
		              <Property Name="databaseName" Value="DATABASE_NAME"/>
		              <Property Name="user" Value="USER_NAME"/>
		              <Property Name="password" Value="PASSWORD"/>
		            </DataSource>
		          </Storage>
		        </Wrapper>
			</Wrappers>
			-->
			
			<!--
                For Database elements of type sql, you can specify the pooling that
                should be used with a Pool element. This pooling is independent of the selected database driver.
                
                This element has the following attributes:
                    Type               The type should be either jdbc or tridion.
                    Size               Maximum number of connections to open.
                    MonitorInterval    Number of seconds between checks on the pool.
                    IdleTimeout        Number of seconds a connection can be idle before it is closed.
                    CheckoutTimeout    Number of seconds a connection can be checked out before it is returned to pool.
            -->
			<!--			
				Configuration example for MS SQL Server 2008 R2 SP1 & 2012 SP1, using the MSSQL JDBC driver.

				The DataSource element specifies the class name of the DataSource to use and properties specific to the datasource.
				For the MSSQL JDBC driver the minimum set of properties to set are:
					serverName: name of the server that hosts the database
					portNumber: configuration of the port used for TCP/IP connections to the database. 1433 is the default port.
					databaseName: name of the database to access
					userName: username used to access the database
					password: password used to access the database
				

			<Storage Type="persistence" Id="defaultdb" dialect="MSSQL" Class="com.tridion.storage.persistence.JPADAOFactory">
				<Pool Type="jdbc" Size="5" MonitorInterval="60" IdleTimeout="120" CheckoutTimeout="120" />
				<DataSource Class="com.microsoft.sqlserver.jdbc.SQLServerDataSource">
					<Property Name="serverName" Value="localhost" />
					<Property Name="portNumber" Value="1433" />
					<Property Name="databaseName" Value="Tridion_Broker" />
					<Property Name="user" Value="TridionBrokerUser" />
					<Property Name="password" Value="Tr1d10n" />
				</DataSource>
			</Storage>
			-->
			
			<!--			
				Configuration example for DB2 Version 9.7

				The DataSource element specifies the class name of the DataSource to use and properties specific to the datasource.
				For the DB2 Version 9.7 driver the minimum set of properties to set are:
					serverName: name of the server that hosts the database
					portNumber: configuration of the port used for TCP/IP connections to the database. 50000 is the default port.
					databaseName: name of the database to access
					userName: username used to access the database
					password: password used to access the database
					driverType: set to "4" to indicate a pure java driver so no client installations of the driver are required.
				
			
			<Storage Type="persistence" Id="defaultdb1" dialect="DB2" Class="com.tridion.storage.persistence.JPADAOFactory">
				<Pool Type="jdbc" Size="5" MonitorInterval="60" IdleTimeout="120" CheckoutTimeout="120" />
				<DataSource Class="com.ibm.db2.jcc.DB2SimpleDataSource">
					<Property Name="serverName" Value="SERVER_NAME"/>
					<Property Name="portNumber" Value="50000"/>
					<Property Name="databaseName" Value="DATABASE_NAME"/>
					<Property Name="user" Value="USER_NAME"/>
					<Property Name="password" Value="PASSWORD"/>
					<Property Name="driverType" Value="4"/>
				</DataSource>
			</Storage>
			-->
			
			<!--			
				Configuration example for Oracle 10 and Oracle 11. 

				The DataSource element specifies the class name of the DataSource to use and properties specific to the datasource.
				For the Oracle 10 driver the minimum set of properties to set are:			
					driverType: set to value "thin". Indicates the type of driver to use, by using "thin" no oracle client installation is required.
					networkProtocol: "tcp". Indicates TCP/IP will be used for connectivity.
					serverName: name of the server that hosts the database
					portNumber: configuration of the port used for TCP/IP connections to the database. 1521 is the default port.
					databaseName: name of the database to access
					userName: username used to access the database
					password: password used to access the database				
			-->
<!--			<Storage Type="persistence" Id="defaultdb2" dialect="ORACLESQL" Class="com.tridion.storage.persistence.JPADAOFactory">
				<Pool Type="jdbc" Size="5" MonitorInterval="60" IdleTimeout="120" CheckoutTimeout="120" />
				<DataSource Class="oracle.jdbc.pool.OracleDataSource">
					<Property Name="driverType" Value="thin"/>
					<Property Name="networkProtocol" Value="tcp"/>
					<Property Name="serverName" Value="SERVER_NAME"/>
					<Property Name="portNumber" Value="1521"/>
					<Property Name="databaseName" Value="DATABASE_NAME"/>
					<Property Name="user" Value="USER_NAME"/>
					<Property Name="password" Value="PASSWORD"/>
				</DataSource>
			</Storage>-->

            <!--
         				Configuration example for MongoDB
            <Storage Type="persistence" Id="defaultMongoDB" dialect="MONGOSQL" Class="JPACustomDAOFactory">
         				<Pool Type="jdbc" Size="5" MonitorInterval="60" IdleTimeout="120" CheckoutTimeout="120" />
         				<DataSource Class="mongodb.jdbc.MongoDataSource">
         					<Property Name="driverType" Value="thin"/>
         					<Property Name="networkProtocol" Value="tcp"/>
         					<Property Name="serverName" Value="ds041188.mongolab.com"/>
         					<Property Name="portNumber" Value="41188"/>
         					<Property Name="databaseName" Value="heroku_app27444784"/>
         					<Property Name="user" Value="heroku_app27444784"/>
         					<Property Name="password" Value="lk6qm9jiqmj2ev35mu8l08coov"/>
         				</DataSource>
         			</Storage>
            -->

<!--
            <Storage Type="persistence" Id="defaultMongoDB" ialect="MONGOSQL" Class="com.tridion.storage.extensions.persistence.JPACustomDAOFactory">
         				<Pool Type="jdbc" Size="5" MonitorInterval="60" IdleTimeout="120" CheckoutTimeout="120" />
         				<DataSource Class="mongodb.jdbc.MongoDataSource">
         					<Property Name="url" Value="jdbc:mongo://localhost:27017/local"/>
         					<Property Name="user" Value=""/>
         					<Property Name="password" Value=""/>
         				</DataSource>
            </Storage>
-->

			<!--
				Configuration example for using a old style compatible JDBC Driver datasources. 
			
			<Storage Type="persistence" Class="com.tridion.storage.persistence.JPADAOFactory" dialect="MSSQL" Id="defaultdb3" Url="JDBC_URL_CONNECTION_STRING" Username="USERNAME" Password="PASSWORD" Driver="DRIVER_CLASS">
				<Pool Type="jdbc2" Size="5" MonitorInterval="60" IdleTimeout="120" CheckoutTimeout="120"/>
			</Storage>
			-->

            <!--<Storage Type="persistence" Class="com.tridion.storage.persistence.JPADAOFactory" dialect="MONGOSQL" Id="defaultMongoDB2" JNDIName="java:comp/env/jdbc/DATA_SOURCE_NAME"/>-->
			
			<!--			
				Configuration example for using an Oracle based JNDI datasource.
			
			<Storage Type="persistence" Class="com.tridion.storage.persistence.JPADAOFactory" dialect="ORACLESQL" Id="defaultdb4" JNDIName="java:comp/env/jdbc/DATA_SOURCE_NAME"/>
			-->
			
			<!--			
				Configuration example for using a MS SQL based JNDI datasource.
			
			<Storage Type="persistence" Class="com.tridion.storage.persistence.JPADAOFactory" dialect="MSSQL" Id="defaultdb5" JNDIName="java:comp/env/jdbc/DATA_SOURCE_NAME"/>
			-->
			
			<!--			
				Configuration example for using a DB2 based JNDI datasource.
			
			<Storage Type="persistence" Class="com.tridion.storage.persistence.JPADAOFactory" dialect="DB2" Id="defaultdb6" JNDIName="java:comp/env/jdbc/DATA_SOURCE_NAME"/>
			-->
						
			<!--			
				Configuration example for using filesystem as data storage. 
			-->
			<Storage Type="filesystem" Class="com.tridion.storage.extensions.filesystem.CDNFSDAOFactory" Id="defaultFile" defaultFilesystem="false">
				<Root Path="C:\Data\tridion\stored\Default" />
			</Storage>
            <Storage Type="filesystem" Class="com.tridion.storage.extensions.filesystem.CDNFSDAOFactory" Id="defaultHtmlFile" defaultFilesystem="false">
                <Root Path="C:\Data\tridion\stored\Pages" />
            </Storage>
            <Storage Type="filesystem" Class="com.tridion.storage.extensions.filesystem.CDNFSDAOFactory" Id="defaultJsonFile" defaultFilesystem="false">
                <Root Path="C:\Data\tridion\stored\Pages" />
            </Storage>
            <Storage Type="filesystem" Class="com.tridion.storage.extensions.filesystem.CDNFSDAOFactory" Id="defaultDataFile" defaultFilesystem="false">
				<Root Path="C:\Data\tridion\stored\Binary" />
			</Storage>
			<Storage Type="filesystem" Class="com.tridion.storage.extensions.filesystem.CDNFSDAOFactory" Id="defaultMiamiFile" defaultFilesystem="true" defaultStorage="false">
				<Root Path="C:\Data\tridion\stored\Resources" />
			</Storage>
			<!--
			Configuration Example for SearchFilter home used by the SearchFilter Query API

			<SearchFilter Name="SearchFilter" Class="com.tridion.broker.components.meta.OracleSearchFilterHome" defaultStorageId="defaultdb2"/>
			-->
			<!--
			<SearchFilter Name="SearchFilter" Class="com.tridion.broker.components.meta.DB2SearchFilterHome" defaultStorageId="defaultdb1"/>
			-->
			<!--
			<SearchFilter Name="SearchFilter" Class="com.tridion.broker.components.meta.MsSqlSearchFilterHome" defaultStorageId="defaultdb"/>
			-->
        </Storages>
		<!-- This configures the taxonomy reference count for keywords, if CountEnabled is 
		set to False the reference count for keywords will not get updated. The default setting is keyword counts are enabled. --> 
		<!--<Taxonomies CountEnabled="false"/>-->
		
		<!-- Configures transaction storage settings, how long before a transaction gets rolledback and on which interval to monitor for
		outstanding transactions. Default timeout is 120000 ms. (2 minutes) and Default interval is 5000ms. (5 seconds) -->
		<!-- <Transaction Timeout="120000" MonitorInterval="5000"/> -->
    </Global>
	<!-- If no item type mappings are defined within ItemTypes or if storages on a lower level do not exist then the storage defined by defaultStorageId attribute will be used.
		 If storage defined by defaultStorageId does not exist then exception will be thrown. -->
    <ItemTypes defaultStorageId="defaultFile" cached="false">
		<!-- Query type mapping is replacement for Query gnenerator. If there was query generator defined in a Broker configuration then  Query type mapping should be binded to default DB. -->
		<!--
		<Item typeMapping="Query" storageId="defaultdb"/>
		-->
		<!--Optional:-->
		<!-- <Item typeMapping="Binary" itemExtension=".jpg" storageId="defaultFile" cached="true"/>
		<Item typeMapping="Binary" itemExtension=".gif" storageId="defaultFile" cached="true"/>
		<Item typeMapping="Binary" itemExtension=".png" storageId="defaultFile" cached="true"/> -->
		<!-- If the item type mapping is defined and storage defined by storageId is the existing one then that one will be used.
			 If storage defined by storageId does not exist then default storage defined by ItemTypes element will be used. -->
		<!--
		<Item typeMapping="Binary" itemExtension=".pdf" storageId="defaultFile" cached="true"/>
		<Item typeMapping="Binary" itemExtension=".iso" storageId="defaultFile" cached="false"/>

        <Item typeMapping="ComponentLinkClick" cached="true" storageId="defaultFile"/>

		<Item typeMapping="Metadata" cached="true" storageId="defaultFile"/>
        <Item typeMapping="ComponentVisit" cached="true" storageId="defaultFile"/>
        -->
        <!--<Item typeMapping="DynamicLinkInfo" cached="true" storageId="defaultDataFile"/>-->

        <Item typeMapping="Page" itemExtension=".html" cached="true" storageId="defaultHtmlFile"/>
        <Item typeMapping="Page" itemExtension=".json" cached="true" storageId="defaultJsonFile"/>
		<Item typeMapping="Binary" storageId="defaultDataFile" cached="false" />
        <!--
		<Item typeMapping="Personalization" cached="true" storageId="defaultdb"/>
		<Item typeMapping="SearchFilter" cached="true" storageId="defaultFile"/>
		<Item typeMapping="Taxonomy" cached="true" storageId="defaultdb"/>
		<Item typeMapping="Timeframe" cached="true" storageId="defaultFile"/>
		<Item typeMapping="TrackedPage" cached="true" storageId="defaultFile"/>
		<Item typeMapping="XSLT" cached="true" storageId="defaultFile"/>
		<Item typeMapping="ExtensionData" cached="false" storageId="defaultdb"/>
		-->
		<!-- UGC -->
        <!--
        <Item typeMapping="Comment" storageId="ugcdb"/>
        <Item typeMapping="Rating" storageId="ugcdb"/>
        <Item typeMapping="UGCUser" storageId="ugcdb"/>
        <Item typeMapping="UGCItemStats" storageId="ugcdb"/>
		-->
		
		<!--Optional:-->
		<!-- If the publication is defined and storage defined by defaultStorageId is the existing one then that one will be used for that publication unless it is overwriten on a lower level.
			 If storage defined by storageId does not exist then default storage defined by ItemTypes element will be used unless lower level type mappings are not matched. -->
		<Publication Id="1" defaultStorageId="defaultFile" cached="false">
			<!--Optional:-->
			<!-- If there is a type mapping match and storage is defined for storageId then that storage will be used.
				 Otherwise; first storage defined within publication element will be referenced, and if that one does not exist then the storage from Item elements will be referenced. 
				 and at the end storage defined within ItemTypes will be used.-->
			<!--
			<Item typeMapping="ComponentPresentation" itemExtension=".Jsp" storageId="defaultFile"/>
			<Item typeMapping="ComponentPresentation" itemExtension=".Asp" storageId="defaultFile"/>
			<Item typeMapping="ComponentPresentation" itemExtension=".Xml" storageId="defaultFile"/>
			<Item typeMapping="ComponentPresentation" itemExtension=".Txt" storageId="defaultFile"/>
			<Item typeMapping="Metadata" cached="true" storageId="defaultFile"/>
            <Item typeMapping="Binary" itemExtension=".pdf" storageId="defaultFile" cached="true"/>
            <Item typeMapping="Binary" itemExtension=".iso" storageId="defaultFile" cached="false"/>
            <Item typeMapping="ComponentLinkClick" cached="true" storageId="defaultFile"/>
            <Item typeMapping="ComponentVisit" cached="true" storageId="defaultFile"/>
            <Item typeMapping="DynamicLinkInfo" cached="true" storageId="defaultFile"/>
			<Item typeMapping="Page" cached="true" storageId="defaultFile"/>
            <Item typeMapping="Personalization" cached="true" storageId="defaultdb"/>
            <Item typeMapping="SearchFilter" cached="true" storageId="defaultFile"/>
            <Item typeMapping="Taxonomy" cached="true" storageId="defaultdb"/>
            <Item typeMapping="Timeframe" cached="true" storageId="defaultFile"/>
            <Item typeMapping="TrackedPage" cached="true" storageId="defaultFile"/>
            <Item typeMapping="XSLT" cached="true" storageId="defaultFile"/>
            -->
            <!-- UGC -->
            <!--
            <Item typeMapping="Comment" storageId="ugcdb"/>
            <Item typeMapping="Rating" storageId="ugcdb"/>
            <Item typeMapping="UGCUser" storageId="ugcdb"/>
            <Item typeMapping="UGCItemStats" storageId="ugcdb"/>
			-->			
        </Publication>
    </ItemTypes>
    
    <!-- Specifies the location of the license file. -->
    <!--
    <License Location="c:/Tridion/config/cd_licenses.xml"/>
    -->
</Configuration>
